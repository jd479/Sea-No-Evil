{"version":3,"sources":["webpack:///webpack/bootstrap b597467b80a8cf4a2cdc","webpack:///./lib/sea_no_evil.js","webpack:///./lib/game.js","webpack:///./lib/ai_fish.js","webpack:///./lib/moving_fish.js","webpack:///./lib/game_view.js","webpack:///./lib/util.js","webpack:///./lib/player_fish.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACZD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,qCAAqC;AAC1E;;AAEA;AACA;AACA,kCAAiC,WAAW;AAC5C;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAiC;AACjC,kBAAiB;;AAEjB;AACA,oCAAmC,WAAW;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,oCAAmC;AACnC;AACA,0CAAyC;AACzC,MAAK;AACL,oCAAmC;AACnC,0CAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,oBAAmB,0BAA0B;AAC7C,0BAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,WAAW,UAAU,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACrKA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,mBAAmB,EAAE;AACzC,MAAK;AACL,qBAAoB,gBAAgB,EAAE;AACtC,qBAAoB,gBAAgB,EAAE;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b597467b80a8cf4a2cdc\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game();\n  const gameView = new GameView(game, ctx);\n  gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/sea_no_evil.js\n ** module id = 0\n ** module chunks = 0\n **/","const AIFish = require('./ai_fish');\nconst Util = require('./util');\nconst PlayerFish = require('./player_fish');\n\nclass Game {\n  constructor() {\n    this.fishes = [];\n    this.player = [];\n    this.score = 0;\n    this.populateFish();\n    this.lives = 3;\n    // this.highScore = 0;\n    // window.localStorage.setItem(\"score\", this.highScore);\n    // let hs = document.getElementById(\"high-score\");\n    // hs.innerHTML = `high score: ${window.localStorage.getItem(\"score\")}`;\n  }\n\n  isOver() {\n    if (this.lives < 1) {\n      if (confirm(`You earned: ${this.score} points, want to play again?`)) {\n        document.location.reload(true);\n      } else {\n        this.remove(this.player[0]);\n      }\n    }\n    //   this.addPlayer();\n\n  }\n\n  populateFish() {\n    this.fishes.push(new AIFish({ game: this,\n       width: 40}));\n\n    while (this.fishes.length < Game.NUM_FISH) {\n      this.fishes.push(new AIFish({game: this}));\n    }\n  }\n\n  respawnFish() {\n    const player = this.player[0];\n    let playerIsSmallest = true;\n\n    this.fishes.forEach((fish) => {\n      if (player.isBiggerThan(fish)) {\n        playerIsSmallest = false;\n      }\n    });\n    // ensure there is always at least one fish smaller\n    // than the player\n    if (playerIsSmallest) {\n      this.fishes.push(new AIFish({game: this,\n      width: player.width * .7,\n        pos: this.trulyRandomPosition() }));\n    } else {\n      this.fishes.push(new AIFish({ game: this,\n        pos: this.trulyRandomPosition() }));\n    }\n  }\n\n  semiRandomPosition() {\n    let x = Game.DIM_X * Math.random();\n    let y = Game.DIM_Y * Math.random();\n    while (y < 400 && y > 200 ){\n      y = Game.DIM_Y * Math.random();\n    }\n    while (x < 800 && x > 200) {\n      x = Game.DIM_X * Math.random();\n    }\n\n    return [x, y];\n  }\n\n  trulyRandomPosition() {\n    let x = Game.DIM_X * Math.random();\n    let y = Game.DIM_Y * Math.random();\n    return [x, y];\n  }\n\n  addPlayer() {\n    const playerFish = new PlayerFish({ game: this });\n    this.player.push(playerFish);\n    return playerFish;\n  }\n\n  allFishes() {\n    return [].concat(this.player, this.fishes);\n  }\n\n  isOut(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  moveFishes(time) {\n    this.allFishes().forEach((fish) => {\n\n      fish.move(time);\n    });\n  }\n\n  draw(context) {\n    var bg = new Image();\n      bg.onload = function() {\n        var pattern = context.createPattern(bg, 'repeat');\n\n        context.rect(0, 0, Game.DIM_X, Game.DIM_Y);\n        context.fillStyle = pattern;\n        context.fill();\n      };\n    bg.src = \"images/ocean.jpg\";\n    context.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    context.fillStyle = bg;\n    context.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    this.allFishes().forEach((fish) => {\n      fish.draw(context);\n    });\n  }\n\n  checkCollisions() {\n    const allFishes = this.allFishes();\n    for (let i = 0; i < allFishes.length - 1; i++) {\n      for (let j = i + 1; j < allFishes.length; j++) {\n        const fish1 = allFishes[i];\n        const fish2 = allFishes[j];\n\n        if (fish1.isCollidedWith(fish2)) {\n          const collision = fish1.collideWith(fish2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n\n  step(time) {\n    let score = document.getElementById(\"score\");\n    score.innerHTML = `lives: ${this.lives} score: ${this.score}`;\n    const player = this.player[0];\n    this.moveFishes(time);\n    this.checkCollisions();\n    if (key.getPressedKeyCodes().length === 0 && player) {\n      player.decelerate();\n    }\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n\n  remove(fish) {\n    if (fish instanceof AIFish) {\n      this.fishes.splice(this.fishes.indexOf(fish), 1);\n    } else if (fish instanceof PlayerFish) {\n      this.player.shift();\n    }\n  }\n\n}\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.NUM_FISH = 9;\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const MovingFish = require('./moving_fish');\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nclass AIFish extends MovingFish {\n  constructor( options = {} ) {\n    const dir = Math.round(Math.random()) * 2 - 1;\n    options.width = options.width || 275 * Math.random() + 25;\n    options.vel = [150 / options.width * dir, 0];\n\n    const image = options.image || new Image();\n\n    image.src = \"images/default_fish.png\";\n\n    if (options.width < 50) {\n      image.src = \"images/goldfish.png\";\n    }\n\n    if (options.width > 200) {\n      image.src = \"images/sperm_whale.png\";\n      options.height = options.width / 2;\n      options.width = options.width * 1.5;\n    }\n\n    image.onload = () => {\n      ctx.drawImage(image, 900 * Math.random()\n      , 600 * Math.random());\n    };\n\n    if (dir !== 1) {\n      image.src = image.src.slice(0, -4); //remove tag\n      image.src += `_flipped.png`;\n    }\n\n    options.pos = options.position || options.game.semiRandomPosition();\n    options.image = image;\n    super(options);\n  }\n\n}\n\nmodule.exports = AIFish;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ai_fish.js\n ** module id = 2\n ** module chunks = 0\n **/","const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nclass MovingFish {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.width = options.width;\n    this.height = options.height || options.width / 2;\n    this.image = options.image;\n    this.game = options.game;\n  }\n\n  move(time) {\n    const velocityScale = time / NORMAL_FRAME_TIME_DELTA,\n        offsetX = this.vel[0] * velocityScale,\n        offsetY = this.vel[1] * velocityScale;\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n    if (this.game.isOut(this.pos)) {\n      this.pos = this.game.wrap(this.pos);\n    }\n\n  }\n\n  draw(context) {\n    context.drawImage(this.image,\n       this.pos[0], this.pos[1],\n        this.width, this.height);\n  }\n\n  isCollidedWith(otherFish) {\n    if (this.pos[0] < otherFish.pos[0] + otherFish.width &&\n      this.pos[0] + this.width > otherFish.pos[0] &&\n      this.pos[1] < otherFish.pos[1] + otherFish.height &&\n      this.height + this.pos[1] > otherFish.pos[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideWith(otherFish) {\n  }\n\n  isBiggerThan(otherFish) {\n    return this.width > otherFish.width;\n  }\n\n}\nconst NORMAL_FRAME_TIME_DELTA = 1000/90;\n\nmodule.exports = MovingFish;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_fish.js\n ** module id = 3\n ** module chunks = 0\n **/","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.player = this.game.addPlayer();\n  }\n\n  start() {\n    this.bindKeyHandler();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const delta = time - this.lastTime;\n    this.game.step(delta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  bindKeyHandler() {\n    const player = this.player;\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { player.swim(move); });\n    });\n    key('q', () => { player.brake(); });\n    key('e', () => { player.brake(); });\n  }\n}\n\nGameView.MOVES = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 4\n ** module chunks = 0\n **/","const Util = {\n  wrap (coord, edge) {\n    if (coord < 0) {\n      return edge - (coord % edge);\n    } else if (coord > edge) {\n      return coord % edge;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 5\n ** module chunks = 0\n **/","const MovingFish = require('./moving_fish');\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nclass PlayerFish extends MovingFish {\n  constructor( options = {} ) {\n    const shark = new Image();\n\n    shark.src = \"images/shark.png\";\n    shark.onload = () => {\n      ctx.drawImage(shark, 450, 300);\n    };\n\n    options.image = shark;\n\n    options.pos = [500,\n       300];\n    options.width = 50;\n    options.vel = [0, 0];\n    super(options);\n  }\n\n  collideWith(otherFish) {\n    if (this.isBiggerThan(otherFish)) {\n\n      this.width += otherFish.width * .15;\n      this.height = this.width / 2;\n      this.game.remove(otherFish);\n      this.game.respawnFish();\n      this.game.score += Math.floor(otherFish.width * .15);\n      if (this.width > 1000) {\n        alert('500 bonus points! Bonus life and rebirth!');\n        this.game.score += 500;\n        this.width = 50;\n        this.height = 25;\n        this.pos = this.game.randomPosition();\n        this.brake();\n        this.game.lives++;\n      }\n    } else {\n      // this.game.remove(this);\n      const munch = new Audio('./sound/chomp.wav');\n      munch.play();\n      this.width = (50 + this.width) / 2;\n      this.height = this.width / 2;\n      this.pos = [500, 300];\n      this.brake();\n      this.game.lives--;\n      this.game.isOver();\n    }\n  }\n\n  swim(stroke) {\n    if ( Math.abs(this.vel[0]) < 5 || ((this.vel[0] ^ stroke[0]) < 0)) {\n      this.vel[0] += stroke[0];\n    }\n    if ( Math.abs(this.vel[1]) < 5 || ((this.vel[1] ^ stroke[1]) < 0)) {\n      this.vel[1] += stroke[1];\n    }\n  }\n\n  brake() {\n    this.vel = [0, 0];\n  }\n\n  draw(context) {\n    this.image = new Image();\n    if (this.vel[0] < 0) {\n      this.image.src = \"images/shark_flipped.png\";\n    } else {\n      this.image.src = \"images/shark.png\";\n    }\n    context.drawImage(this.image,\n       this.pos[0], this.pos[1],\n        this.width, this.height);\n  }\n\n  decelerate() {\n    this.vel[0] = this.vel[0] * .96;\n    this.vel[1] = this.vel[1] * .96;\n  }\n}\n\nmodule.exports = PlayerFish;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player_fish.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}